FROM rocker/verse

ENV DEBIAN_FRONTEND=noninteractive

#get python

RUN apt-get update && apt-get install -y --no-install-recommends build-essential libpq-dev python3.11 python3-pip python3-setuptools python3-dev

RUN pip3 install --upgrade pip

RUN apt -y install libpng-dev && apt install -y gnupg2

# Install odbc

RUN sudo su

RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

RUN curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list > /etc/apt/sources.list.d/mssql-release.list

RUN exit

RUN sudo apt-get update && apt install -y apt-utils

RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

RUN sudo apt-get remove -y libodbc2 libodbcinst2 odbcinst unixodbc-common

RUN sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

# Set the working directory
WORKDIR /

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 && \
    ln -s /opt/poetry/bin/poetry /usr/local/bin/poetry && \
    poetry config virtualenvs.create false

# Copy pyproject.toml and poetry.lock for installing dependencies
COPY ./pyproject.toml ./poetry.lock* /

# Install dependencies; --no-root is used to install without packaging the current directory as a module
ARG INSTALL_DEV=false
RUN bash -c "if [ $INSTALL_DEV == 'true' ] ; then poetry install --no-root ; else poetry install --no-root --only main ; fi"

# Set the PYTHONPATH environment variable to include the /app directory
ENV PYTHONPATH=/

# Copy necessary files and directories to the Docker image
COPY . /

# Expose the port that Uvicorn will run on
EXPOSE 8000

# Command to run the application using Uvicorn
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
